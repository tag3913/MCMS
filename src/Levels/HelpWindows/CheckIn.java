
package Levels.HelpWindows;

import MainPackage.HelperFunctions;
import MainPackage.QueryExecuter;
import Models.Rooms;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;

/**
 *
 * @author thom
 */
public class CheckIn extends javax.swing.JFrame {
    private int appointmentId;
    
    /**
     * Creates new form CheckIn
     */
    public CheckIn(int appId) {
        appointmentId = appId;
        initComponents();
        setAvailableRoomsList();
        setPhysicianData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        RoomList = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        CheckInButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        PhysicianData = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        CheckInWarning = new javax.swing.JLabel();
        ExitButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Check In");

        jLabel1.setText("Check Into Appointment");

        jScrollPane1.setViewportView(RoomList);

        jLabel2.setText("Available Rooms");

        CheckInButton.setText("Check In");
        CheckInButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckInButtonActionPerformed(evt);
            }
        });

        PhysicianData.setColumns(20);
        PhysicianData.setRows(5);
        jScrollPane2.setViewportView(PhysicianData);

        jLabel3.setText("Appointment Physician");

        CheckInWarning.setText("Select Patient Room then Check In");

        ExitButton.setText("EXIT");
        ExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(CheckInWarning))
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(92, 92, 92)
                                .addComponent(CheckInButton))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ExitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(25, 25, 25))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CheckInWarning)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CheckInButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                        .addComponent(ExitButton)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CheckInButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckInButtonActionPerformed
        if(RoomList.getSelectedValue() == null){
            CheckInWarning.setText("No Room Selected");
        }
        else{
            int pId = 0;

            int appRoomId = Integer.parseInt(String.valueOf(RoomList.getSelectedValue()));
            String getPatient = "SELECT PatientID FROM AppointmentLine \n" +
                                "WHERE AppointmentID ="+ appointmentId + ";";
            
            ResultSet rs = QueryExecuter.runQuery(getPatient);
            try {
                if(rs.next())
                    pId = rs.getInt("PatientID");
                
                String roomUpdate = "UPDATE Rooms\n" +
                                    "SET RoomPatient = " + pId + "\n" +
                                    "WHERE RoomID = " + appRoomId +";";
                QueryExecuter.runUpdate(roomUpdate);
            } catch (SQLException ex) {
                Logger.getLogger(CheckIn.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            setVisible(false);
            dispose(); 
            
        }
    }//GEN-LAST:event_CheckInButtonActionPerformed

    private void ExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtonActionPerformed
        setVisible(false);
        dispose();
    }//GEN-LAST:event_ExitButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CheckInButton;
    private javax.swing.JLabel CheckInWarning;
    private javax.swing.JButton ExitButton;
    private javax.swing.JTextArea PhysicianData;
    private javax.swing.JList<String> RoomList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
    
    
    private void setAvailableRoomsList(){
        int[] rooms = Rooms.getAvailableRooms();
        HelperFunctions.fillList(rooms, RoomList);
    }
    
    private void setPhysicianData(){
        String physQuery = "SELECT s.StaffID, s.FirstName, s.LastName, s.SignedIn\n" +
"FROM Staff s JOIN AppointmentLine l\n" +
"WHERE s.StaffID = l.StaffID AND l.AppointmentID =" + appointmentId + ";";
        String physInfo = "";
        
        ResultSet rs = QueryExecuter.runQuery(physQuery);
        try {
            while(rs.next()){
                physInfo += "ID: " + rs.getInt("s.StaffID") + "\n";
                physInfo += "First name: " + rs.getString("s.FirstName") + "\n";
                physInfo += "Last name: " + rs.getString("s.LastName") + "\n";
                physInfo += "Signed In?: " + rs.getString("s.SignedIn") + "\n";
            }
        } catch (SQLException ex) {
            Logger.getLogger(CheckIn.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        PhysicianData.setText(physInfo);
        
    }

}
